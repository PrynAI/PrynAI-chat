name: build-and-deploy-chainlit
on:
  push:
    branches: [ main ]
    paths:
      - "apps/chainlit-ui/**"
      - ".github/workflows/build_deploy_chainlit.yml"

concurrency:
  group: deploy-chainlit
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      RG: ${{ vars.AZ_RG }}
      ACR_NAME: ${{ vars.ACR_NAME }}
      REGISTRY: ${{ vars.ACR_NAME }}.azurecr.io
      APP: ${{ vars.CHAINLIT_APP_NAME }}       # MUST equal your ACA resource name (ca-chainlit)
      IMAGE_REPO: prynai/chainlit
      IMAGE_TAG: ${{ github.sha }}
      IMAGE: ${{ vars.ACR_NAME }}.azurecr.io/prynai/chainlit:${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_FEDERATED_CLIENT_ID }}
          tenant-id:  ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
# OIDC workflow reference 
# https: learn.microsoft.com/azure/developer/github/connect-from-azure-openid-connect

      - name: Build image in ACR (server-side)
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az acr build -r $ACR_NAME -t $IMAGE -f apps/chainlit-ui/Dockerfile .
# ACR Tasks docs 
# https: learn.microsoft.com/azure/container-registry/container-registry-tutorial-quick-task

      - name: Roll the Container App to the new image
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update -g $RG -n $APP --image $IMAGE
# Update Container App 
# https: learn.microsoft.com/azure/container-apps/github-actions
